import{r as a,w as u}from"./chunk-CPOvvIjG.js";const j=a.createContext({color:"currentColor",size:"1em",weight:"regular",mirrored:!1});var B=Object.defineProperty,i=Object.getOwnPropertySymbols,v=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,g=(r,l,e)=>l in r?B(r,l,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[l]=e,w=(r,l)=>{for(var e in l||(l={}))v.call(l,e)&&g(r,e,l[e]);if(i)for(var e of i(l))d.call(l,e)&&g(r,e,l[e]);return r},m=(r,l)=>{var e={};for(var o in r)v.call(r,o)&&l.indexOf(o)<0&&(e[o]=r[o]);if(r!=null&&i)for(var o of i(r))l.indexOf(o)<0&&d.call(r,o)&&(e[o]=r[o]);return e};const h=a.forwardRef((r,l)=>{const e=r,{alt:o,color:n,size:t,weight:c,mirrored:p,children:b,weights:x}=e,y=m(e,["alt","color","size","weight","mirrored","children","weights"]),s=a.useContext(j),{color:O="currentColor",size:f,weight:z="regular",mirrored:C=!1}=s,E=m(s,["color","size","weight","mirrored"]);return u.createElement("svg",w(w({ref:l,xmlns:"http://www.w3.org/2000/svg",width:t??f,height:t??f,fill:n??O,viewBox:"0 0 256 256",transform:p||C?"scale(-1, 1)":void 0},E),y),!!o&&u.createElement("title",null,o),b,x.get(c??z))});h.displayName="IconBase";const P=h;export{P as b};
